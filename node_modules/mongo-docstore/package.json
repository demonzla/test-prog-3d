{
  "author": {
    "name": "Leandro Boffi",
    "url": "lboffi@gmail.com"
  },
  "name": "mongo-docstore",
  "description": "A very minimalist mongodb client for Node.js",
  "version": "0.0.4",
  "dependencies": {
    "mongodb": "1.1.11"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/leandrob/mongo-docstore.git"
  },
  "main": "./lib/index.js",
  "readme": "# Mongo Doc Store 0.0.4\n\n> A minimalist mongodb client for Node.js\n\n### Installation\n\n```bash\n$ npm install mongo-docstore\n```\n\n### Examples\n\n```javascript\n\nvar store = require('mongo-docstore');\n\n// 1. Configure...\nstore.connectionString = 'your-mongo-connection-here';\n\n// 2. Add a document to the 'beatles' collection (id is optional)...\nvar george = { id: 1, name: 'George Harrison', role: 'Guitar' };\n\nstore.add('beatles', george, function(error, beatle) {\n\n\t// beatle will contain:\n\t// { \n\t//   _id: 1,\n\t//\t id: 1, \n\t//\t name: 'George Harrison', \n\t//\t role: 'Guitar' \n\t// }\n});\n\n// 3. Update a document on the 'beatles' collection...\ngeorge.role = 'Guitar and sitar'\n\nstore.update('beatles', george, function(error, beatle) {\n\n\t// beatle will contain:\n\t// { \n\t//   _id: 1,\n\t//   id: 1,\n\t//\t name: 'George Harrison', \n\t//\t role: 'Guitar and sitar' \n\t// }\n});\n\n// 4. Remove a document from the 'beatles' collection...\nvar georgeId = george.id;\n\nstore.remove('beatles', georgeId, function(errr, numberOfRemovedDocs) {\n\t// numberOfRemovedDocs will contain the number of docs removed.\n});\n\n// 5. Find One document in the 'beatles' collection...\nstore.findOne('beatles', { name: 'George Harisson' }, function(error, beatle) {\n\t\n\t// beatle will contain:\n\t// { \n\t//   _id: 1,\n\t//   id: 1,\n\t//\t name: 'George Harrison', \n\t//\t role: 'Guitar and sitar' \n\t// }\t\n});\n\n// 6. Find One document in the 'beatles' collection...\nvar georgeId = george.id;\n\nstore.findOneById('beatles', georgeId, function(error, beatle) {\n\t\n\t// beatle will contain:\n\t// { \n\t//   _id: 1,\n\t//   id: 1,\n\t//\t name: 'George Harrison', \n\t//\t role: 'Guitar and sitar' \n\t// }\t\n});\n\n// 7. Find more than one document in the 'beatles' collection...\nstore.find('beatles', { role: 'Guitar' }, function(error, beatles) {\n\n\t// beatles will contain an array of documents...\n});\n\n// 8. Find all the documents in the 'beatles' collection (just remove the selector)...\nstore.find('beatles', function(error, beatles) {\n\t\n\t// beatles will contain an array of documents...\n});\n\n// 9. Any other crazy thing with the 'beatles' collection...\nstore('beatles', function(error, collection, db) {\n\t// collection will contain the mongodb oficial driver collection object.\n\t// db will contain the mongodb official driver db object.\n\n\t// if you use this remember to close the DB (all the other methods handle that)\n\t// db.close();\n});\n\n// 10. Any crazy thing with the database...\nstore(function(error, db) {\n\t// db will contain the mongodb official driver db object.\n\n\t// if you use this remember to close the DB (all the other methods handle that)\n\t// db.close();\n});\n\n```\n\n### License (MIT)\n\nCopyright (c) 2012, Leandro Boffi.\n\n### Author: [Leandro Boffi][0]\n\n[0]: http://github.com/leandrob/\n",
  "readmeFilename": "README.md",
  "_id": "mongo-docstore@0.0.4",
  "dist": {
    "shasum": "0ec76f0f9f7720d428b70d916f0418710f805737",
    "tarball": "http://registry.npmjs.org/mongo-docstore/-/mongo-docstore-0.0.4.tgz"
  },
  "_from": "mongo-docstore@*",
  "_npmVersion": "1.2.2",
  "_npmUser": {
    "name": "leandrob",
    "email": "lboffi@gmail.com"
  },
  "maintainers": [
    {
      "name": "leandrob",
      "email": "lboffi@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "0ec76f0f9f7720d428b70d916f0418710f805737",
  "_resolved": "https://registry.npmjs.org/mongo-docstore/-/mongo-docstore-0.0.4.tgz"
}
