In file included from ../ext/bson.cc:35:0:
../ext/bson.h:56:51: ошибка: «Arguments» не является именем типа
  static Handle<Value> BSONDeserializeStream(const Arguments &args);
                                                   ^
../ext/bson.h:59:43: ошибка: «Arguments» не является именем типа
  static Handle<Value> BSONSerialize(const Arguments &args);
                                           ^
../ext/bson.h:60:45: ошибка: «Arguments» не является именем типа
  static Handle<Value> BSONDeserialize(const Arguments &args);
                                             ^
../ext/bson.h:63:49: ошибка: «Arguments» не является именем типа
  static Handle<Value> CalculateObjectSize(const Arguments &args);
                                                 ^
../ext/bson.h:64:57: ошибка: «Arguments» не является именем типа
  static Handle<Value> SerializeWithBufferAndIndex(const Arguments &args);
                                                         ^
../ext/bson.h:70:33: ошибка: «Arguments» не является именем типа
  static Handle<Value> New(const Arguments &args);
                                 ^
../ext/bson.cc: В функции-члене «void BSONSerializer<T>::SerializeValue(void*, const v8::Handle<v8::Value>&)»:
../ext/bson.cc:203:39: ошибка: нет подходящей функции для вызова «v8::Object::Has(v8::Persistent<v8::String>&)»
   if(object->Has(bson->_bsontypeString))
                                       ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2144:8: замечание: candidate: bool v8::Object::Has(v8::Handle<v8::Value>)
   bool Has(Handle<Value> key);
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2144:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2152:8: замечание: candidate: bool v8::Object::Has(uint32_t)
   bool Has(uint32_t index);
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2152:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:206:23: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    if(bson->longString->StrictEquals(constructorString))
                       ^
../ext/bson.cc:212:33: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->timestampString->StrictEquals(constructorString))
                                 ^
../ext/bson.cc:218:32: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->objectIDString->StrictEquals(constructorString))
                                ^
../ext/bson.cc:223:30: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->binaryString->StrictEquals(constructorString))
                              ^
../ext/bson.cc:227:62: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     uint32_t length = object->Get(bson->_binaryPositionString)->Uint32Value();
                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:228:68: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     Local<Object> bufferObj = object->Get(bson->_binaryBufferString)->ToObject();
                                                                    ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:233:46: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     if(object->Get(bson->_binarySubTypeString)->Int32Value() == 0x02) {
                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:239:30: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->doubleString->StrictEquals(constructorString))
                              ^
../ext/bson.cc:244:30: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->symbolString->StrictEquals(constructorString))
                              ^
../ext/bson.cc:247:73: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     this->WriteLengthPrefixedString(object->Get(bson->_symbolValueString)->ToString());
                                                                         ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:249:28: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->codeString->StrictEquals(constructorString))
                            ^
../ext/bson.cc:251:70: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     const Local<String>& function = object->Get(bson->_codeCodeString)->ToString();
                                                                      ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:252:68: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     const Local<Object>& scope = object->Get(bson->_codeScopeString)->ToObject();
                                                                    ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:275:29: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->dbrefString->StrictEquals(constructorString))
                             ^
../ext/bson.cc:283:68: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     SerializeValue(refType, object->Get(bson->_dbRefNamespaceString));
                                                                    ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:287:61: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     SerializeValue(idType, object->Get(bson->_dbRefOidString));
                                                             ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:289:70: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
     const Local<Value>& refDbValue = object->Get(bson->_dbRefDbString);
                                                                      ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:300:30: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->minKeyString->StrictEquals(constructorString))
                              ^
../ext/bson.cc:304:30: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::String>»
    else if(bson->maxKeyString->StrictEquals(constructorString))
                              ^
../ext/bson.cc: В функции-члене «v8::Local<v8::String> BSONDeserializer::ReadCString()»:
../ext/bson.cc:361:9: ошибка: «New» не является элементом «v8::String»
  return String::New(start, (int32_t) (p-start-1) );
         ^
../ext/bson.cc: В функции-члене «v8::Local<v8::String> BSONDeserializer::ReadString()»:
../ext/bson.cc:396:9: ошибка: «New» не является элементом «v8::String»
  return String::New(start, length-1);
         ^
../ext/bson.cc: В функции-члене «v8::Local<v8::String> BSONDeserializer::ReadObjectId()»:
../ext/bson.cc:406:9: ошибка: «New» не является элементом «v8::String»
  return String::New(objectId, 12);
         ^
../ext/bson.cc: В функции-члене «v8::Handle<v8::Value> BSONDeserializer::DeserializeDocumentInternal(bool)»:
../ext/bson.cc:420:43: ошибка: нет подходящей функции для вызова «v8::Object::New()»
  Local<Object> returnObject = Object::New();
                                           ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2388:24: замечание: candidate: static v8::Local<v8::Object> v8::Object::New(v8::Isolate*)
   static Local<Object> New(Isolate* isolate);
                        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2388:24: замечание:   candidate expects 1 argument, 0 provided
../ext/bson.cc:433:46: ошибка: нет подходящей функции для вызова «v8::Object::Has(v8::Persistent<v8::String>&)»
  if(returnObject->Has(bson->_dbRefIdRefString))
                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2144:8: замечание: candidate: bool v8::Object::Has(v8::Handle<v8::Value>)
   bool Has(Handle<Value> key);
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2144:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2152:8: замечание: candidate: bool v8::Object::Has(uint32_t)
   bool Has(uint32_t index);
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2152:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:435:66: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
   Local<Value> argv[] = { returnObject->Get(bson->_dbRefRefString), returnObject->Get(bson->_dbRefIdRefString), returnObject->Get(bson->_dbRefDbRefString) };
                                                                  ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:435:110: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
   Local<Value> argv[] = { returnObject->Get(bson->_dbRefRefString), returnObject->Get(bson->_dbRefIdRefString), returnObject->Get(bson->_dbRefDbRefString) };
                                                                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:435:154: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
   Local<Value> argv[] = { returnObject->Get(bson->_dbRefRefString), returnObject->Get(bson->_dbRefIdRefString), returnObject->Get(bson->_dbRefDbRefString) };
                                                                                                                                                          ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:436:32: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
   return bson->dbrefConstructor->NewInstance(3, argv);
                                ^
../ext/bson.cc: В функции-члене «v8::Handle<v8::Value> BSONDeserializer::DeserializeArrayInternal(bool)»:
../ext/bson.cc:455:40: ошибка: нет подходящей функции для вызова «v8::Array::New()»
  Local<Array> returnArray = Array::New();
                                        ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2417:23: замечание: candidate: static v8::Local<v8::Array> v8::Array::New(v8::Isolate*, int)
   static Local<Array> New(Isolate* isolate, int length = 0);
                       ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2417:23: замечание:   candidate expects 2 arguments, 0 provided
../ext/bson.cc: В функции-члене «v8::Handle<v8::Value> BSONDeserializer::DeserializeValue(BsonType, bool)»:
../ext/bson.cc:477:34: ошибка: нет подходящей функции для вызова «v8::Integer::New(int32_t)»
   return Integer::New(ReadInt32());
                                  ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:480:34: ошибка: нет подходящей функции для вызова «v8::Number::New(double)»
   return Number::New(ReadDouble());
                                  ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1999:24: замечание: candidate: static v8::Local<v8::Number> v8::Number::New(v8::Isolate*, double)
   static Local<Number> New(Isolate* isolate, double value);
                        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1999:24: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:483:15: ошибка: too few arguments to function «v8::Handle<v8::Primitive> v8::Null(v8::Isolate*)»
   return Null();
               ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:306:28: замечание: declared here
   friend Handle<Primitive> Null(Isolate* isolate);
                            ^
../ext/bson.cc:486:20: ошибка: too few arguments to function «v8::Handle<v8::Primitive> v8::Undefined(v8::Isolate*)»
   return Undefined();
                    ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:305:28: замечание: declared here
   friend Handle<Primitive> Undefined(Isolate* isolate);
                            ^
../ext/bson.cc:492:46: ошибка: нет подходящей функции для вызова «v8::Int32::New(int32_t&)»
    Local<Value> argv[] = { Int32::New(lowBits), Int32::New(highBits) };
                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:492:68: ошибка: нет подходящей функции для вызова «v8::Int32::New(int32_t&)»
    Local<Value> argv[] = { Int32::New(lowBits), Int32::New(highBits) };
                                                                    ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:493:37: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
    return bson->timestampConstructor->NewInstance(2, argv);
                                     ^
../ext/bson.cc:497:35: ошибка: too few arguments to function «v8::Handle<v8::Boolean> v8::True(v8::Isolate*)»
   return (ReadByte() != 0) ? True() : False();
                                   ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:6613:17: замечание: declared here
 Handle<Boolean> True(Isolate* isolate) {
                 ^
../ext/bson.cc:497:45: ошибка: too few arguments to function «v8::Handle<v8::Boolean> v8::False(v8::Isolate*)»
   return (ReadByte() != 0) ? True() : False();
                                             ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:6622:17: замечание: declared here
 Handle<Boolean> False(Isolate* isolate) {
                 ^
../ext/bson.cc:509:44: ошибка: нет подходящей функции для вызова «v8::Object::New()»
    const Local<Value>& scope = Object::New();
                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2388:24: замечание: candidate: static v8::Local<v8::Object> v8::Object::New(v8::Isolate*)
   static Local<Object> New(Isolate* isolate);
                        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2388:24: замечание:   candidate expects 1 argument, 0 provided
../ext/bson.cc:511:32: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
    return bson->codeConstructor->NewInstance(2, argv);
                                ^
../ext/bson.cc:520:32: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
    return bson->codeConstructor->NewInstance(2, argv);
                                ^
../ext/bson.cc:526:36: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
    return bson->objectIDConstructor->NewInstance(1, argv);
                                    ^
../ext/bson.cc:537:10: ошибка: expected primary-expression before «*» token
    Buffer* buffer = Buffer::New(p, length);
          ^
../ext/bson.cc:537:12: ошибка: нет декларации «buffer» в этой области видимости
    Buffer* buffer = Buffer::New(p, length);
            ^
../ext/bson.cc:540:65: ошибка: нет подходящей функции для вызова «v8::Uint32::New(uint32_t&)»
    Handle<Value> argv[] = { buffer->handle_, Uint32::New(subType) };
                                                                 ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:541:34: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
    return bson->binaryConstructor->NewInstance(2, argv);
                                  ^
../ext/bson.cc:558:35: ошибка: нет подходящей функции для вызова «v8::Number::New(int64_t&)»
      return Number::New(finalValue);
                                   ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1999:24: замечание: candidate: static v8::Local<v8::Number> v8::Number::New(v8::Isolate*, double)
   static Local<Number> New(Isolate* isolate, double value);
                        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1999:24: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:563:46: ошибка: нет подходящей функции для вызова «v8::Int32::New(int32_t&)»
    Local<Value> argv[] = { Int32::New(lowBits), Int32::New(highBits) };
                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:563:68: ошибка: нет подходящей функции для вызова «v8::Int32::New(int32_t&)»
    Local<Value> argv[] = { Int32::New(lowBits), Int32::New(highBits) };
                                                                    ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:564:32: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
    return bson->longConstructor->NewInstance(2, argv);
                                ^
../ext/bson.cc:568:40: ошибка: нет подходящей функции для вызова «v8::Date::New(double)»
   return Date::New((double) ReadInt64());
                                        ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:3007:23: замечание: candidate: static v8::Local<v8::Value> v8::Date::New(v8::Isolate*, double)
   static Local<Value> New(Isolate* isolate, double time);
                       ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:3007:23: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:580:34: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
    return bson->symbolConstructor->NewInstance(1, argv);
                                  ^
../ext/bson.cc:584:33: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
   return bson->minKeyConstructor->NewInstance();
                                 ^
../ext/bson.cc:587:33: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::Function>»
   return bson->maxKeyConstructor->NewInstance();
                                 ^
../ext/bson.cc:593:18: ошибка: too few arguments to function «v8::Handle<v8::Primitive> v8::Null(v8::Isolate*)»
  return v8::Null();
                  ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:306:28: замечание: declared here
   friend Handle<Primitive> Null(Isolate* isolate);
                            ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: В функции «v8::Handle<v8::Value> VException(const char*)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:599:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:600:41: ошибка: «New» не является элементом «v8::String»
  return ThrowException(Exception::Error(String::New(msg)));
                                         ^
../ext/bson.cc:600:58: ошибка: нет декларации «ThrowException» в этой области видимости
  return ThrowException(Exception::Error(String::New(msg)));
                                                          ^
../ext/bson.cc: In constructor «BSON::BSON()»:
../ext/bson.cc:608:44: ошибка: «New» не является элементом «v8::String»
  _bsontypeString = Persistent<String>::New(String::New("_bsontype"));
                                            ^
../ext/bson.cc:609:43: ошибка: «New» не является элементом «v8::String»
  _longLowString = Persistent<String>::New(String::New("low_"));
                                           ^
../ext/bson.cc:610:44: ошибка: «New» не является элементом «v8::String»
  _longHighString = Persistent<String>::New(String::New("high_"));
                                            ^
../ext/bson.cc:611:46: ошибка: «New» не является элементом «v8::String»
  _objectIDidString = Persistent<String>::New(String::New("id"));
                                              ^
../ext/bson.cc:612:50: ошибка: «New» не является элементом «v8::String»
  _binaryPositionString = Persistent<String>::New(String::New("position"));
                                                  ^
../ext/bson.cc:613:49: ошибка: «New» не является элементом «v8::String»
  _binarySubTypeString = Persistent<String>::New(String::New("sub_type"));
                                                 ^
../ext/bson.cc:614:48: ошибка: «New» не является элементом «v8::String»
  _binaryBufferString = Persistent<String>::New(String::New("buffer"));
                                                ^
../ext/bson.cc:615:47: ошибка: «New» не является элементом «v8::String»
  _doubleValueString = Persistent<String>::New(String::New("value"));
                                               ^
../ext/bson.cc:616:47: ошибка: «New» не является элементом «v8::String»
  _symbolValueString = Persistent<String>::New(String::New("value"));
                                               ^
../ext/bson.cc:617:44: ошибка: «New» не является элементом «v8::String»
  _dbRefRefString = Persistent<String>::New(String::New("$ref"));
                                            ^
../ext/bson.cc:618:46: ошибка: «New» не является элементом «v8::String»
  _dbRefIdRefString = Persistent<String>::New(String::New("$id"));
                                              ^
../ext/bson.cc:619:46: ошибка: «New» не является элементом «v8::String»
  _dbRefDbRefString = Persistent<String>::New(String::New("$db"));
                                              ^
../ext/bson.cc:620:50: ошибка: «New» не является элементом «v8::String»
  _dbRefNamespaceString = Persistent<String>::New(String::New("namespace"));
                                                  ^
../ext/bson.cc:621:43: ошибка: «New» не является элементом «v8::String»
  _dbRefDbString = Persistent<String>::New(String::New("db"));
                                           ^
../ext/bson.cc:622:44: ошибка: «New» не является элементом «v8::String»
  _dbRefOidString = Persistent<String>::New(String::New("oid"));
                                            ^
../ext/bson.cc:623:44: ошибка: «New» не является элементом «v8::String»
  _codeCodeString = Persistent<String>::New(String::New("code"));
                                            ^
../ext/bson.cc:624:45: ошибка: «New» не является элементом «v8::String»
  _codeScopeString = Persistent<String>::New(String::New("scope"));
                                             ^
../ext/bson.cc:625:42: ошибка: «New» не является элементом «v8::String»
  _toBSONString = Persistent<String>::New(String::New("toBSON"));
                                          ^
../ext/bson.cc:627:39: ошибка: «New» не является элементом «v8::String»
  longString = Persistent<String>::New(String::New("Long"));
                                       ^
../ext/bson.cc:628:43: ошибка: «New» не является элементом «v8::String»
  objectIDString = Persistent<String>::New(String::New("ObjectID"));
                                           ^
../ext/bson.cc:629:41: ошибка: «New» не является элементом «v8::String»
  binaryString = Persistent<String>::New(String::New("Binary"));
                                         ^
../ext/bson.cc:630:39: ошибка: «New» не является элементом «v8::String»
  codeString = Persistent<String>::New(String::New("Code"));
                                       ^
../ext/bson.cc:631:40: ошибка: «New» не является элементом «v8::String»
  dbrefString = Persistent<String>::New(String::New("DBRef"));
                                        ^
../ext/bson.cc:632:41: ошибка: «New» не является элементом «v8::String»
  symbolString = Persistent<String>::New(String::New("Symbol"));
                                         ^
../ext/bson.cc:633:41: ошибка: «New» не является элементом «v8::String»
  doubleString = Persistent<String>::New(String::New("Double"));
                                         ^
../ext/bson.cc:634:44: ошибка: «New» не является элементом «v8::String»
  timestampString = Persistent<String>::New(String::New("Timestamp"));
                                            ^
../ext/bson.cc:635:41: ошибка: «New» не является элементом «v8::String»
  minKeyString = Persistent<String>::New(String::New("MinKey"));
                                         ^
../ext/bson.cc:636:41: ошибка: «New» не является элементом «v8::String»
  maxKeyString = Persistent<String>::New(String::New("MaxKey"));
                                         ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: In static member function «static void BSON::Initialize(v8::Handle<v8::Object>)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:642:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:644:55: ошибка: нет подходящей функции для вызова «v8::FunctionTemplate::New(v8::Handle<v8::Value> (&)(const int&))»
  Local<FunctionTemplate> t = FunctionTemplate::New(New);
                                                       ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:3455:34: замечание: candidate: static v8::Local<v8::FunctionTemplate> v8::FunctionTemplate::New(v8::Isolate*, v8::FunctionCallback, v8::Handle<v8::Value>, v8::Handle<v8::Signature>, int)
   static Local<FunctionTemplate> New(
                                  ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:3455:34: замечание:   no known conversion for argument 1 from «v8::Handle<v8::Value>(const int&)» to «v8::Isolate*»
../ext/bson.cc:645:60: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::FunctionTemplate>::New(v8::Local<v8::FunctionTemplate>&)»
  constructor_template = Persistent<FunctionTemplate>::New(t);
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::FunctionTemplate]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:646:22: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::FunctionTemplate>»
  constructor_template->InstanceTemplate()->SetInternalFieldCount(1);
                      ^
../ext/bson.cc:647:22: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::FunctionTemplate>»
  constructor_template->SetClassName(String::NewSymbol("BSON"));
                      ^
../ext/bson.cc:647:37: ошибка: «NewSymbol» не является элементом «v8::String»
  constructor_template->SetClassName(String::NewSymbol("BSON"));
                                     ^
../ext/bson.cc:650:92: ошибка: could not convert «BSON::constructor_template» from «v8::Persistent<v8::FunctionTemplate>» to «v8::Handle<v8::FunctionTemplate>»
  NODE_SET_PROTOTYPE_METHOD(constructor_template, "calculateObjectSize", CalculateObjectSize);
                                                                                            ^
../ext/bson.cc:651:76: ошибка: could not convert «BSON::constructor_template» from «v8::Persistent<v8::FunctionTemplate>» to «v8::Handle<v8::FunctionTemplate>»
  NODE_SET_PROTOTYPE_METHOD(constructor_template, "serialize", BSONSerialize);
                                                                            ^
../ext/bson.cc:652:108: ошибка: could not convert «BSON::constructor_template» from «v8::Persistent<v8::FunctionTemplate>» to «v8::Handle<v8::FunctionTemplate>»
  NODE_SET_PROTOTYPE_METHOD(constructor_template, "serializeWithBufferAndIndex", SerializeWithBufferAndIndex);
                                                                                                            ^
../ext/bson.cc:653:80: ошибка: could not convert «BSON::constructor_template» from «v8::Persistent<v8::FunctionTemplate>» to «v8::Handle<v8::FunctionTemplate>»
  NODE_SET_PROTOTYPE_METHOD(constructor_template, "deserialize", BSONDeserialize);
                                                                                ^
../ext/bson.cc:654:92: ошибка: could not convert «BSON::constructor_template» from «v8::Persistent<v8::FunctionTemplate>» to «v8::Handle<v8::FunctionTemplate>»
  NODE_SET_PROTOTYPE_METHOD(constructor_template, "deserializeStream", BSONDeserializeStream);
                                                                                            ^
../ext/bson.cc:656:19: ошибка: «NewSymbol» не является элементом «v8::String»
  target->ForceSet(String::NewSymbol("BSON"), constructor_template->GetFunction());
                   ^
../ext/bson.cc:656:66: ошибка: base operand of «->» has non-pointer type «v8::Persistent<v8::FunctionTemplate>»
  target->ForceSet(String::NewSymbol("BSON"), constructor_template->GetFunction());
                                                                  ^
../ext/bson.cc: At global scope:
../ext/bson.cc:660:31: ошибка: «Arguments» не является именем типа
 Handle<Value> BSON::New(const Arguments &args)
                               ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: In static member function «static v8::Handle<v8::Value> BSON::New(const int&)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:662:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:665:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 1 && args[0]->IsArray())
          ^
../ext/bson.cc:665:33: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 1 && args[0]->IsArray())
                                 ^
../ext/bson.cc:668:49: ошибка: некорректные типы «const int[int]» для индекса массива
   Local<Array> array = Local<Array>::Cast(args[0]);
                                                 ^
../ext/bson.cc:684:51: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     if(functionName->StrictEquals(bson->longString)) {
                                                   ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:685:60: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->longConstructor = Persistent<Function>::New(func);
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:687:62: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->objectIDString)) {
                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:688:64: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->objectIDConstructor = Persistent<Function>::New(func);
                                                                ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:690:60: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->binaryString)) {
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:691:62: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->binaryConstructor = Persistent<Function>::New(func);
                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:693:58: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->codeString)) {
                                                          ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:694:60: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->codeConstructor = Persistent<Function>::New(func);
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:696:59: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->dbrefString)) {
                                                           ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:697:61: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->dbrefConstructor = Persistent<Function>::New(func);
                                                             ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:699:60: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->symbolString)) {
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:700:62: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->symbolConstructor = Persistent<Function>::New(func);
                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:702:60: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->doubleString)) {
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:703:62: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->doubleConstructor = Persistent<Function>::New(func);
                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:705:63: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->timestampString)) {
                                                               ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:706:65: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->timestampConstructor = Persistent<Function>::New(func);
                                                                 ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:708:60: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->minKeyString)) {
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:709:62: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->minKeyConstructor = Persistent<Function>::New(func);
                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:711:60: ошибка: нет подходящей функции для вызова «v8::String::StrictEquals(v8::Persistent<v8::String>&)»
     } else if(functionName->StrictEquals(bson->maxKeyString)) {
                                                            ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание: candidate: bool v8::Value::StrictEquals(v8::Handle<v8::Value>) const
   bool StrictEquals(Handle<Value> that) const;
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:1564:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
../ext/bson.cc:712:62: ошибка: нет подходящей функции для вызова «v8::Persistent<v8::Function>::New(v8::Local<v8::Function>&)»
      bson->maxKeyConstructor = Persistent<Function>::New(func);
                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание: candidate: static T* v8::PersistentBase<T>::New(v8::Isolate*, T*) [with T = v8::Function]
 T* PersistentBase<T>::New(Isolate* isolate, T* that) {
    ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:5798:4: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc:722:21: ошибка: запрос элемента «This» в «args», имеющего не классовый тип «const int»
     bson->Wrap(args.This());
                     ^
../ext/bson.cc:723:17: ошибка: запрос элемента «This» в «args», имеющего не классовый тип «const int»
     return args.This();
                 ^
../ext/bson.cc: At global scope:
../ext/bson.cc:742:43: ошибка: «Arguments» не является именем типа
 Handle<Value> BSON::BSONDeserialize(const Arguments &args)
                                           ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: In static member function «static v8::Handle<v8::Value> BSON::BSONDeserialize(const int&)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:744:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:747:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() > 1 && !args[0]->IsString() && !Buffer::HasInstance(args[0]))
          ^
../ext/bson.cc:747:33: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() > 1 && !args[0]->IsString() && !Buffer::HasInstance(args[0]))
                                 ^
../ext/bson.cc:747:77: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() > 1 && !args[0]->IsString() && !Buffer::HasInstance(args[0]))
                                                                             ^
../ext/bson.cc:754:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 2 && args[1]->IsObject()) {
          ^
../ext/bson.cc:754:33: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 2 && args[1]->IsObject()) {
                                 ^
../ext/bson.cc:755:33: ошибка: некорректные типы «const int[int]» для индекса массива
   Local<Object> options = args[1]->ToObject();
                                 ^
../ext/bson.cc:757:19: ошибка: «New» не является элементом «v8::String»
   if(options->Has(String::New("promoteLongs"))) {
                   ^
../ext/bson.cc:758:32: ошибка: «New» не является элементом «v8::String»
    promoteLongs = options->Get(String::New("promoteLongs"))->ToBoolean()->Value();
                                ^
../ext/bson.cc:763:28: ошибка: некорректные типы «const int[int]» для индекса массива
  Local<Object> obj = args[0]->ToObject();
                            ^
../ext/bson.cc:766:45: ошибка: запрос элемента «This» в «args», имеющего не классовый тип «const int»
  BSON *bson = ObjectWrap::Unwrap<BSON>(args.This());
                                             ^
../ext/bson.cc:800:35: ошибка: некорректные типы «const int[int]» для индекса массива
   ssize_t len = DecodeBytes(args[0], BINARY);
                                   ^
../ext/bson.cc:807:32: ошибка: некорректные типы «const int[int]» для индекса массива
   DecodeWrite(data, len, args[0], BINARY);
                                ^
../ext/bson.cc: В функции-члене «v8::Local<v8::Object> BSON::GetSerializeObject(const v8::Handle<v8::Value>&)»:
../ext/bson.cc:831:30: ошибка: нет подходящей функции для вызова «v8::Object::Has(v8::Persistent<v8::String>&)»
  if(object->Has(_toBSONString))
                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2144:8: замечание: candidate: bool v8::Object::Has(v8::Handle<v8::Value>)
   bool Has(Handle<Value> key);
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2144:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2152:8: замечание: candidate: bool v8::Object::Has(uint32_t)
   bool Has(uint32_t index);
        ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2152:8: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc:833:57: ошибка: нет подходящей функции для вызова «v8::Object::Get(v8::Persistent<v8::String>&)»
   const Local<Value>& toBSON = object->Get(_toBSONString);
                                                         ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(v8::Handle<v8::Value>)
   Local<Value> Get(Handle<Value> key);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2128:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «v8::Handle<v8::Value>»
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание: candidate: v8::Local<v8::Value> v8::Object::Get(uint32_t)
   Local<Value> Get(uint32_t index);
                ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2130:16: замечание:   no known conversion for argument 1 from «v8::Persistent<v8::String>» to «uint32_t {aka unsigned int}»
../ext/bson.cc: At global scope:
../ext/bson.cc:846:41: ошибка: «Arguments» не является именем типа
 Handle<Value> BSON::BSONSerialize(const Arguments &args)
                                         ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: In static member function «static v8::Handle<v8::Value> BSON::BSONSerialize(const int&)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:848:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:850:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 1 && !args[0]->IsObject()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
          ^
../ext/bson.cc:850:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 1 && !args[0]->IsObject()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
                                  ^
../ext/bson.cc:851:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 2 && !args[0]->IsObject() && !args[1]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
          ^
../ext/bson.cc:851:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 2 && !args[0]->IsObject() && !args[1]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
                                  ^
../ext/bson.cc:851:58: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 2 && !args[0]->IsObject() && !args[1]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
                                                          ^
../ext/bson.cc:852:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 3 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
          ^
../ext/bson.cc:852:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 3 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
                                  ^
../ext/bson.cc:852:58: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 3 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
                                                          ^
../ext/bson.cc:852:83: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 3 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean]");
                                                                                   ^
../ext/bson.cc:853:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean() && !args[3]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean] or [object, boolean, boolean, boolean]");
          ^
../ext/bson.cc:853:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean() && !args[3]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean] or [object, boolean, boolean, boolean]");
                                  ^
../ext/bson.cc:853:58: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean() && !args[3]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean] or [object, boolean, boolean, boolean]");
                                                          ^
../ext/bson.cc:853:83: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean() && !args[3]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean] or [object, boolean, boolean, boolean]");
                                                                                   ^
../ext/bson.cc:853:108: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !args[2]->IsBoolean() && !args[3]->IsBoolean()) return VException("One, two or tree arguments required - [object] or [object, boolean] or [object, boolean, boolean] or [object, boolean, boolean, boolean]");
                                                                                                            ^
../ext/bson.cc:854:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() > 4) return VException("One, two, tree or four arguments required - [object] or [object, boolean] or [object, boolean, boolean] or [object, boolean, boolean, boolean]");
          ^
../ext/bson.cc:857:11: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args[0]->IsArray()) return VException("Only javascript objects supported");
           ^
../ext/bson.cc:860:45: ошибка: запрос элемента «This» в «args», имеющего не классовый тип «const int»
  BSON *bson = ObjectWrap::Unwrap<BSON>(args.This());
                                             ^
../ext/bson.cc:864:34: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  bool serializeFunctions = (args.Length() >= 4) && args[3]->BooleanValue();
                                  ^
../ext/bson.cc:864:58: ошибка: некорректные типы «const int[int]» для индекса массива
  bool serializeFunctions = (args.Length() >= 4) && args[3]->BooleanValue();
                                                          ^
../ext/bson.cc:870:57: ошибка: некорректные типы «const int[int]» для индекса массива
   Local<Object> object = bson->GetSerializeObject(args[0]);
                                                         ^
../ext/bson.cc:880:25: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
   bool checkKeys = args.Length() >= 3 && args[1]->IsBoolean() && args[1]->BooleanValue();
                         ^
../ext/bson.cc:880:48: ошибка: некорректные типы «const int[int]» для индекса массива
   bool checkKeys = args.Length() >= 3 && args[1]->IsBoolean() && args[1]->BooleanValue();
                                                ^
../ext/bson.cc:880:72: ошибка: некорректные типы «const int[int]» для индекса массива
   bool checkKeys = args.Length() >= 3 && args[1]->IsBoolean() && args[1]->BooleanValue();
                                                                        ^
../ext/bson.cc:893:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 3 || args.Length() == 4)
          ^
../ext/bson.cc:893:32: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 3 || args.Length() == 4)
                                ^
../ext/bson.cc:895:10: ошибка: expected primary-expression before «*» token
   Buffer *buffer = Buffer::New(serialized_object, object_size);
          ^
../ext/bson.cc:895:11: ошибка: нет декларации «buffer» в этой области видимости
   Buffer *buffer = Buffer::New(serialized_object, object_size);
           ^
../ext/bson.cc:897:16: ошибка: «class v8::HandleScope» has no member named «Close»
   return scope.Close(buffer->handle_);
                ^
../ext/bson.cc: At global scope:
../ext/bson.cc:907:47: ошибка: «Arguments» не является именем типа
 Handle<Value> BSON::CalculateObjectSize(const Arguments &args)
                                               ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: In static member function «static v8::Handle<v8::Value> BSON::CalculateObjectSize(const int&)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:909:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:911:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 1 && !args[0]->IsObject()) return VException("One argument required - [object]");
          ^
../ext/bson.cc:911:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 1 && !args[0]->IsObject()) return VException("One argument required - [object]");
                                  ^
../ext/bson.cc:912:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 2 && !args[0]->IsObject() && !args[1]->IsBoolean())  return VException("Two arguments required - [object, boolean]");
          ^
../ext/bson.cc:912:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 2 && !args[0]->IsObject() && !args[1]->IsBoolean())  return VException("Two arguments required - [object, boolean]");
                                  ^
../ext/bson.cc:912:58: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 2 && !args[0]->IsObject() && !args[1]->IsBoolean())  return VException("Two arguments required - [object, boolean]");
                                                          ^
../ext/bson.cc:913:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() > 3) return VException("One or two arguments required - [object] or [object, boolean]");
          ^
../ext/bson.cc:916:45: ошибка: запрос элемента «This» в «args», имеющего не классовый тип «const int»
  BSON *bson = ObjectWrap::Unwrap<BSON>(args.This());
                                             ^
../ext/bson.cc:917:34: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  bool serializeFunctions = (args.Length() >= 2) && args[1]->BooleanValue();
                                  ^
../ext/bson.cc:917:58: ошибка: некорректные типы «const int[int]» для индекса массива
  bool serializeFunctions = (args.Length() >= 2) && args[1]->BooleanValue();
                                                          ^
../ext/bson.cc:919:42: ошибка: некорректные типы «const int[int]» для индекса массива
  countSerializer.SerializeDocument(args[0]);
                                          ^
../ext/bson.cc:922:15: ошибка: «class v8::HandleScope» has no member named «Close»
  return scope.Close(Uint32::New((uint32_t) countSerializer.GetSerializeSize()));
               ^
../ext/bson.cc:922:78: ошибка: нет подходящей функции для вызова «v8::Uint32::New(uint32_t)»
  return scope.Close(Uint32::New((uint32_t) countSerializer.GetSerializeSize()));
                                                                              ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc: At global scope:
../ext/bson.cc:925:55: ошибка: «Arguments» не является именем типа
 Handle<Value> BSON::SerializeWithBufferAndIndex(const Arguments &args)
                                                       ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: In static member function «static v8::Handle<v8::Value> BSON::SerializeWithBufferAndIndex(const int&)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:927:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:931:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() > 5) return VException("Four or five parameters required [object, boolean, Buffer, int] or [object, boolean, Buffer, int, boolean]");
          ^
../ext/bson.cc:932:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32()) return VException("Four parameters required [object, boolean, Buffer, int]");
          ^
../ext/bson.cc:932:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32()) return VException("Four parameters required [object, boolean, Buffer, int]");
                                  ^
../ext/bson.cc:932:58: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32()) return VException("Four parameters required [object, boolean, Buffer, int]");
                                                          ^
../ext/bson.cc:932:103: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32()) return VException("Four parameters required [object, boolean, Buffer, int]");
                                                                                                       ^
../ext/bson.cc:932:116: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 4 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32()) return VException("Four parameters required [object, boolean, Buffer, int]");
                                                                                                                    ^
../ext/bson.cc:933:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 5 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32() && !args[4]->IsBoolean()) return VException("Four parameters required [object, boolean, Buffer, int, boolean]");
          ^
../ext/bson.cc:933:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 5 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32() && !args[4]->IsBoolean()) return VException("Four parameters required [object, boolean, Buffer, int, boolean]");
                                  ^
../ext/bson.cc:933:58: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 5 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32() && !args[4]->IsBoolean()) return VException("Four parameters required [object, boolean, Buffer, int, boolean]");
                                                          ^
../ext/bson.cc:933:103: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 5 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32() && !args[4]->IsBoolean()) return VException("Four parameters required [object, boolean, Buffer, int, boolean]");
                                                                                                       ^
../ext/bson.cc:933:116: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 5 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32() && !args[4]->IsBoolean()) return VException("Four parameters required [object, boolean, Buffer, int, boolean]");
                                                                                                                    ^
../ext/bson.cc:933:140: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 5 && !args[0]->IsObject() && !args[1]->IsBoolean() && !Buffer::HasInstance(args[2]) && !args[3]->IsUint32() && !args[4]->IsBoolean()) return VException("Four parameters required [object, boolean, Buffer, int, boolean]");
                                                                                                                                            ^
../ext/bson.cc:940:46: ошибка: запрос элемента «This» в «args», имеющего не классовый тип «const int»
   BSON *bson = ObjectWrap::Unwrap<BSON>(args.This());
                                              ^
../ext/bson.cc:942:29: ошибка: некорректные типы «const int[int]» для индекса массива
   Local<Object> obj = args[2]->ToObject();
                             ^
../ext/bson.cc:946:17: ошибка: некорректные типы «const int[int]» для индекса массива
   index = args[3]->Uint32Value();
                 ^
../ext/bson.cc:947:25: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
   bool checkKeys = args.Length() >= 4 && args[1]->IsBoolean() && args[1]->BooleanValue();
                         ^
../ext/bson.cc:947:48: ошибка: некорректные типы «const int[int]» для индекса массива
   bool checkKeys = args.Length() >= 4 && args[1]->IsBoolean() && args[1]->BooleanValue();
                                                ^
../ext/bson.cc:947:72: ошибка: некорректные типы «const int[int]» для индекса массива
   bool checkKeys = args.Length() >= 4 && args[1]->IsBoolean() && args[1]->BooleanValue();
                                                                        ^
../ext/bson.cc:948:35: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
   bool serializeFunctions = (args.Length() == 5) && args[4]->BooleanValue();
                                   ^
../ext/bson.cc:948:59: ошибка: некорректные типы «const int[int]» для индекса массива
   bool serializeFunctions = (args.Length() == 5) && args[4]->BooleanValue();
                                                           ^
../ext/bson.cc:951:67: ошибка: некорректные типы «const int[int]» для индекса массива
   dataSerializer.SerializeDocument(bson->GetSerializeObject(args[0]));
                                                                   ^
../ext/bson.cc:963:15: ошибка: «class v8::HandleScope» has no member named «Close»
  return scope.Close(Uint32::New((uint32_t) (index + object_size - 1)));
               ^
../ext/bson.cc:963:69: ошибка: нет подходящей функции для вызова «v8::Uint32::New(uint32_t)»
  return scope.Close(Uint32::New((uint32_t) (index + object_size - 1)));
                                                                     ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
../ext/bson.cc: At global scope:
../ext/bson.cc:966:49: ошибка: «Arguments» не является именем типа
 Handle<Value> BSON::BSONDeserializeStream(const Arguments &args)
                                                 ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: In static member function «static v8::Handle<v8::Value> BSON::BSONDeserializeStream(const int&)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:968:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc:971:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() < 5) return VException("Arguments required (Buffer(data), Number(index in data), Number(number of documents to deserialize), Array(results), Number(index in the array), Object(optional))");
          ^
../ext/bson.cc:974:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() >= 5)
          ^
../ext/bson.cc:976:33: ошибка: некорректные типы «const int[int]» для индекса массива
   if(!Buffer::HasInstance(args[0])) return VException("First argument must be Buffer instance");
                                 ^
../ext/bson.cc:977:13: ошибка: некорректные типы «const int[int]» для индекса массива
   if(!args[1]->IsUint32()) return VException("Second argument must be a positive index number");
             ^
../ext/bson.cc:978:13: ошибка: некорректные типы «const int[int]» для индекса массива
   if(!args[2]->IsUint32()) return VException("Third argument must be a positive number of documents to deserialize");
             ^
../ext/bson.cc:979:13: ошибка: некорректные типы «const int[int]» для индекса массива
   if(!args[3]->IsArray()) return VException("Fourth argument must be an array the size of documents to deserialize");
             ^
../ext/bson.cc:980:13: ошибка: некорректные типы «const int[int]» для индекса массива
   if(!args[4]->IsUint32()) return VException("Sixth argument must be a positive index number");
             ^
../ext/bson.cc:984:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 6 && !args[5]->IsObject()) return VException("Fifth argument must be an object with options");
          ^
../ext/bson.cc:984:34: ошибка: некорректные типы «const int[int]» для индекса массива
  if(args.Length() == 6 && !args[5]->IsObject()) return VException("Fifth argument must be an object with options");
                                  ^
../ext/bson.cc:987:28: ошибка: некорректные типы «const int[int]» для индекса массива
  Local<Object> obj = args[0]->ToObject();
                            ^
../ext/bson.cc:988:37: ошибка: некорректные типы «const int[int]» для индекса массива
  uint32_t numberOfDocuments = args[2]->Uint32Value();
                                     ^
../ext/bson.cc:989:25: ошибка: некорректные типы «const int[int]» для индекса массива
  uint32_t index = args[1]->Uint32Value();
                         ^
../ext/bson.cc:990:31: ошибка: некорректные типы «const int[int]» для индекса массива
  uint32_t resultIndex = args[4]->Uint32Value();
                               ^
../ext/bson.cc:994:10: ошибка: запрос элемента «Length» в «args», имеющего не классовый тип «const int»
  if(args.Length() == 6) {
          ^
../ext/bson.cc:995:33: ошибка: некорректные типы «const int[int]» для индекса массива
   Local<Object> options = args[5]->ToObject();
                                 ^
../ext/bson.cc:998:19: ошибка: «New» не является элементом «v8::String»
   if(options->Has(String::New("promoteLongs"))) {
                   ^
../ext/bson.cc:999:32: ошибка: «New» не является элементом «v8::String»
    promoteLongs = options->Get(String::New("promoteLongs"))->ToBoolean()->Value();
                                ^
../ext/bson.cc:1004:45: ошибка: запрос элемента «This» в «args», имеющего не классовый тип «const int»
  BSON *bson = ObjectWrap::Unwrap<BSON>(args.This());
                                             ^
../ext/bson.cc:1017:34: ошибка: некорректные типы «const int[int]» для индекса массива
  Local<Object> documents = args[3]->ToObject();
                                  ^
../ext/bson.cc:1035:15: ошибка: «class v8::HandleScope» has no member named «Close»
  return scope.Close(Uint32::New((uint32_t) (index + deserializer.GetSerializeSize())));
               ^
../ext/bson.cc:1035:85: ошибка: нет подходящей функции для вызова «v8::Uint32::New(uint32_t)»
  return scope.Close(Uint32::New((uint32_t) (index + deserializer.GetSerializeSize())));
                                                                                     ^
In file included from ../ext/bson.cc:14:0:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание: candidate: static v8::Local<v8::Integer> v8::Integer::New(v8::Isolate*, int32_t)
   static Local<Integer> New(Isolate* isolate, int32_t value);
                         ^
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:2012:25: замечание:   candidate expects 2 arguments, 1 provided
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h: В функции «void init(v8::Handle<v8::Object>)»:
/home/demon/.node-gyp/0.12.5/deps/v8/include/v8.h:816:13: ошибка: «v8::HandleScope::HandleScope()» is protected
   V8_INLINE HandleScope() {}
             ^
../ext/bson.cc:1041:14: ошибка: в данном контексте
  HandleScope scope;
              ^
../ext/bson.cc: In instantiation of «void BSONSerializer<T>::SerializeValue(void*, const v8::Handle<v8::Value>&) [with T = CountStream]»:
../ext/bson.cc:116:18:   required from «void BSONSerializer<T>::SerializeDocument(const v8::Handle<v8::Value>&) [with T = CountStream]»
../ext/bson.cc:873:35:   required from here
../ext/bson.cc:209:5: ошибка: нет подходящей функции для вызова «BSONSerializer<CountStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longLowString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:135:7: замечание: candidate: void CountStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { count += 4; }
       ^
../ext/bson.h:135:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:136:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { count += 4; }
       ^
../ext/bson.h:136:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:137:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { count += 4; }
       ^
../ext/bson.h:137:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:210:5: ошибка: нет подходящей функции для вызова «BSONSerializer<CountStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longHighString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:135:7: замечание: candidate: void CountStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { count += 4; }
       ^
../ext/bson.h:135:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:136:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { count += 4; }
       ^
../ext/bson.h:136:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:137:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { count += 4; }
       ^
../ext/bson.h:137:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:215:5: ошибка: нет подходящей функции для вызова «BSONSerializer<CountStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longLowString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:135:7: замечание: candidate: void CountStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { count += 4; }
       ^
../ext/bson.h:135:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:136:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { count += 4; }
       ^
../ext/bson.h:136:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:137:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { count += 4; }
       ^
../ext/bson.h:137:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:216:5: ошибка: нет подходящей функции для вызова «BSONSerializer<CountStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longHighString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:135:7: замечание: candidate: void CountStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { count += 4; }
       ^
../ext/bson.h:135:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:136:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { count += 4; }
       ^
../ext/bson.h:136:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:137:7: замечание: candidate: void CountStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { count += 4; }
       ^
../ext/bson.h:137:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:221:5: ошибка: нет подходящей функции для вызова «BSONSerializer<CountStream>::WriteObjectId(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteObjectId(object, bson->_objectIDidString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:145:7: замечание: candidate: void CountStream::WriteObjectId(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteObjectId(const Handle<Object>& object, const Handle<String>& key)    { count += 12; }
       ^
../ext/bson.h:145:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:231:5: ошибка: нет подходящей функции для вызова «BSONSerializer<CountStream>::WriteByte(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteByte(object, bson->_binarySubTypeString); // write subtype
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:132:7: замечание: candidate: void CountStream::WriteByte(int)
  void WriteByte(int value)         { ++count; }
       ^
../ext/bson.h:132:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:133:7: замечание: candidate: void CountStream::WriteByte(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteByte(const Handle<Object>&, const Handle<String>&) { ++count; }
       ^
../ext/bson.h:133:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:242:5: ошибка: нет подходящей функции для вызова «BSONSerializer<CountStream>::WriteDouble(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteDouble(object, bson->_doubleValueString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:140:7: замечание: candidate: void CountStream::WriteDouble(double)
  void WriteDouble(double value)        { count += 8; }
       ^
../ext/bson.h:140:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:141:7: замечание: candidate: void CountStream::WriteDouble(const v8::Handle<v8::Value>&)
  void WriteDouble(const Handle<Value>& value)     { count += 8; }
       ^
../ext/bson.h:141:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:142:7: замечание: candidate: void CountStream::WriteDouble(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteDouble(const Handle<Object>&, const Handle<String>&) { count += 8; }
       ^
../ext/bson.h:142:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc: In instantiation of «void BSONSerializer<T>::SerializeValue(void*, const v8::Handle<v8::Value>&) [with T = DataStream]»:
../ext/bson.cc:116:18:   required from «void BSONSerializer<T>::SerializeDocument(const v8::Handle<v8::Value>&) [with T = DataStream]»
../ext/bson.cc:882:32:   required from here
../ext/bson.cc:209:5: ошибка: нет подходящей функции для вызова «BSONSerializer<DataStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longLowString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:171:7: замечание: candidate: void DataStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { *reinterpret_cast<int32_t*>(p) = value; p += 4; }
       ^
../ext/bson.h:171:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:180:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { WriteInt32(value->Int32Value());   }
       ^
../ext/bson.h:180:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:181:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
       ^
../ext/bson.h:181:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:210:5: ошибка: нет подходящей функции для вызова «BSONSerializer<DataStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longHighString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:171:7: замечание: candidate: void DataStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { *reinterpret_cast<int32_t*>(p) = value; p += 4; }
       ^
../ext/bson.h:171:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:180:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { WriteInt32(value->Int32Value());   }
       ^
../ext/bson.h:180:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:181:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
       ^
../ext/bson.h:181:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:215:5: ошибка: нет подходящей функции для вызова «BSONSerializer<DataStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longLowString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:171:7: замечание: candidate: void DataStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { *reinterpret_cast<int32_t*>(p) = value; p += 4; }
       ^
../ext/bson.h:171:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:180:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { WriteInt32(value->Int32Value());   }
       ^
../ext/bson.h:180:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:181:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
       ^
../ext/bson.h:181:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:216:5: ошибка: нет подходящей функции для вызова «BSONSerializer<DataStream>::WriteInt32(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteInt32(object, bson->_longHighString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:171:7: замечание: candidate: void DataStream::WriteInt32(int32_t)
  void WriteInt32(int32_t value)        { *reinterpret_cast<int32_t*>(p) = value; p += 4; }
       ^
../ext/bson.h:171:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:180:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Value>&)
  void WriteInt32(const Handle<Value>& value)     { WriteInt32(value->Int32Value());   }
       ^
../ext/bson.h:180:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:181:7: замечание: candidate: void DataStream::WriteInt32(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteInt32(const Handle<Object>& object, const Handle<String>& key) { WriteInt32(object->Get(key)); }
       ^
../ext/bson.h:181:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:221:5: ошибка: нет подходящей функции для вызова «BSONSerializer<DataStream>::WriteObjectId(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteObjectId(object, bson->_objectIDidString);
     ^
../ext/bson.cc:42:6: замечание: candidate: void DataStream::WriteObjectId(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
 void DataStream::WriteObjectId(const Handle<Object>& object, const Handle<String>& key)
      ^
../ext/bson.cc:42:6: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:231:5: ошибка: нет подходящей функции для вызова «BSONSerializer<DataStream>::WriteByte(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteByte(object, bson->_binarySubTypeString); // write subtype
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:168:7: замечание: candidate: void DataStream::WriteByte(int)
  void WriteByte(int value)         { *p++ = value; }
       ^
../ext/bson.h:168:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:169:7: замечание: candidate: void DataStream::WriteByte(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteByte(const Handle<Object>& object, const Handle<String>& key) { *p++ = object->Get(key)->Int32Value(); }
       ^
../ext/bson.h:169:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc:242:5: ошибка: нет подходящей функции для вызова «BSONSerializer<DataStream>::WriteDouble(const v8::Local<v8::Object>&, v8::Persistent<v8::String>&)»
     this->WriteDouble(object, bson->_doubleValueString);
     ^
In file included from ../ext/bson.cc:35:0:
../ext/bson.h:173:7: замечание: candidate: void DataStream::WriteDouble(double)
  void WriteDouble(double value)        { *reinterpret_cast<double*>(p) = value; p += 8; }
       ^
../ext/bson.h:173:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:183:7: замечание: candidate: void DataStream::WriteDouble(const v8::Handle<v8::Value>&)
  void WriteDouble(const Handle<Value>& value)     { WriteDouble(value->NumberValue());  }
       ^
../ext/bson.h:183:7: замечание:   candidate expects 1 argument, 2 provided
../ext/bson.h:184:7: замечание: candidate: void DataStream::WriteDouble(const v8::Handle<v8::Object>&, const v8::Handle<v8::String>&)
  void WriteDouble(const Handle<Object>& object, const Handle<String>& key) { WriteDouble(object->Get(key)); }
       ^
../ext/bson.h:184:7: замечание:   no known conversion for argument 2 from «v8::Persistent<v8::String>» to «const v8::Handle<v8::String>&»
../ext/bson.cc: В функции-члене «v8::Local<v8::Object> BSON::GetSerializeObject(const v8::Handle<v8::Value>&)»:
../ext/bson.cc:844:1: предупреждение: control reaches end of non-void function [-Wreturn-type]
 }
 ^
make: *** [Release/obj.target/bson/ext/bson.o] Ошибка 1
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:269:23)
gyp ERR! stack     at ChildProcess.emit (events.js:110:17)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:1074:12)
gyp ERR! System Linux 4.0.7-2-ARCH
gyp ERR! command "node" "/usr/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js" "rebuild"
gyp ERR! cwd /home/demon/heroku/rpc/node_modules/easy_mongo/node_modules/mongodb/node_modules/bson
gyp ERR! node -v v0.12.5
gyp ERR! node-gyp -v v2.0.1
gyp ERR! not ok 
